// Code generated by protoc-gen-go.
// source: golang.conradwood.net/apis/groupemail/groupemail.proto
// DO NOT EDIT!

/*
Package groupemail is a generated protocol buffer package.

It is generated from these files:
	golang.conradwood.net/apis/groupemail/groupemail.proto

It has these top-level messages:
	PingResponse
	InboundConfig
	RecipientConfig
	EmailThread
	ThreadRecipients
*/
package groupemail

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "golang.conradwood.net/apis/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// comment: message pingresponse
type PingResponse struct {
	// comment: field pingresponse.response
	Response string `protobuf:"bytes,1,opt,name=Response" json:"Response,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PingResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

// configuration of an inbound email address
type InboundConfig struct {
	ID           uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	InboundEmail string `protobuf:"bytes,2,opt,name=InboundEmail" json:"InboundEmail,omitempty"`
}

func (m *InboundConfig) Reset()                    { *m = InboundConfig{} }
func (m *InboundConfig) String() string            { return proto.CompactTextString(m) }
func (*InboundConfig) ProtoMessage()               {}
func (*InboundConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InboundConfig) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *InboundConfig) GetInboundEmail() string {
	if m != nil {
		return m.InboundEmail
	}
	return ""
}

// "default" email addresses for this config
type RecipientConfig struct {
	ID            uint64         `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	InboundConfig *InboundConfig `protobuf:"bytes,2,opt,name=InboundConfig" json:"InboundConfig,omitempty"`
	Email         string         `protobuf:"bytes,3,opt,name=Email" json:"Email,omitempty"`
}

func (m *RecipientConfig) Reset()                    { *m = RecipientConfig{} }
func (m *RecipientConfig) String() string            { return proto.CompactTextString(m) }
func (*RecipientConfig) ProtoMessage()               {}
func (*RecipientConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RecipientConfig) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *RecipientConfig) GetInboundConfig() *InboundConfig {
	if m != nil {
		return m.InboundConfig
	}
	return nil
}

func (m *RecipientConfig) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// an email thread
type EmailThread struct {
	ID                    uint64         `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	TriggerSenderEmail    string         `protobuf:"bytes,2,opt,name=TriggerSenderEmail" json:"TriggerSenderEmail,omitempty"`
	TriggerRecipientEmail string         `protobuf:"bytes,3,opt,name=TriggerRecipientEmail" json:"TriggerRecipientEmail,omitempty"`
	Created               uint32         `protobuf:"varint,4,opt,name=Created" json:"Created,omitempty"`
	InboundConfig         *InboundConfig `protobuf:"bytes,5,opt,name=InboundConfig" json:"InboundConfig,omitempty"`
}

func (m *EmailThread) Reset()                    { *m = EmailThread{} }
func (m *EmailThread) String() string            { return proto.CompactTextString(m) }
func (*EmailThread) ProtoMessage()               {}
func (*EmailThread) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *EmailThread) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *EmailThread) GetTriggerSenderEmail() string {
	if m != nil {
		return m.TriggerSenderEmail
	}
	return ""
}

func (m *EmailThread) GetTriggerRecipientEmail() string {
	if m != nil {
		return m.TriggerRecipientEmail
	}
	return ""
}

func (m *EmailThread) GetCreated() uint32 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *EmailThread) GetInboundConfig() *InboundConfig {
	if m != nil {
		return m.InboundConfig
	}
	return nil
}

// recipients of a thread
type ThreadRecipients struct {
	ID           uint64       `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	EmailThread  *EmailThread `protobuf:"bytes,2,opt,name=EmailThread" json:"EmailThread,omitempty"`
	EmailAddress string       `protobuf:"bytes,3,opt,name=EmailAddress" json:"EmailAddress,omitempty"`
}

func (m *ThreadRecipients) Reset()                    { *m = ThreadRecipients{} }
func (m *ThreadRecipients) String() string            { return proto.CompactTextString(m) }
func (*ThreadRecipients) ProtoMessage()               {}
func (*ThreadRecipients) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ThreadRecipients) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ThreadRecipients) GetEmailThread() *EmailThread {
	if m != nil {
		return m.EmailThread
	}
	return nil
}

func (m *ThreadRecipients) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func init() {
	proto.RegisterType((*PingResponse)(nil), "groupemail.PingResponse")
	proto.RegisterType((*InboundConfig)(nil), "groupemail.InboundConfig")
	proto.RegisterType((*RecipientConfig)(nil), "groupemail.RecipientConfig")
	proto.RegisterType((*EmailThread)(nil), "groupemail.EmailThread")
	proto.RegisterType((*ThreadRecipients)(nil), "groupemail.ThreadRecipients")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GroupEmail service

type GroupEmailClient interface {
	// comment: rpc ping
	Ping(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*PingResponse, error)
}

type groupEmailClient struct {
	cc *grpc.ClientConn
}

func NewGroupEmailClient(cc *grpc.ClientConn) GroupEmailClient {
	return &groupEmailClient{cc}
}

func (c *groupEmailClient) Ping(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/groupemail.GroupEmail/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GroupEmail service

type GroupEmailServer interface {
	// comment: rpc ping
	Ping(context.Context, *common.Void) (*PingResponse, error)
}

func RegisterGroupEmailServer(s *grpc.Server, srv GroupEmailServer) {
	s.RegisterService(&_GroupEmail_serviceDesc, srv)
}

func _GroupEmail_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupEmailServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/groupemail.GroupEmail/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupEmailServer).Ping(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _GroupEmail_serviceDesc = grpc.ServiceDesc{
	ServiceName: "groupemail.GroupEmail",
	HandlerType: (*GroupEmailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _GroupEmail_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.conradwood.net/apis/groupemail/groupemail.proto",
}

func init() {
	proto.RegisterFile("golang.conradwood.net/apis/groupemail/groupemail.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x53, 0x41, 0x4f, 0xf2, 0x40,
	0x10, 0x4d, 0xf9, 0x80, 0x4f, 0x87, 0x82, 0x64, 0xa3, 0xb1, 0x10, 0x43, 0x48, 0x4f, 0xc4, 0xc3,
	0x92, 0x20, 0xe1, 0xe4, 0x45, 0xc0, 0x18, 0x6e, 0xa6, 0x12, 0x3d, 0x9a, 0xd2, 0x5d, 0xeb, 0x26,
	0xb0, 0xdb, 0x6c, 0x97, 0x78, 0xe7, 0x57, 0x18, 0x2f, 0x26, 0xfe, 0x50, 0x63, 0xba, 0x2d, 0xb8,
	0x05, 0xf4, 0xe4, 0xa9, 0x33, 0xf3, 0xa6, 0x33, 0x6f, 0xde, 0xce, 0xc0, 0x20, 0x14, 0x73, 0x9f,
	0x87, 0x38, 0x10, 0x5c, 0xfa, 0xe4, 0x45, 0x08, 0x82, 0x39, 0x55, 0x5d, 0x3f, 0x62, 0x71, 0x37,
	0x94, 0x62, 0x19, 0xd1, 0x85, 0xcf, 0xe6, 0x86, 0x89, 0x23, 0x29, 0x94, 0x40, 0xf0, 0x1d, 0x69,
	0xe2, 0x5f, 0x6a, 0x04, 0x62, 0xb1, 0x10, 0x3c, 0xfb, 0xa4, 0xff, 0xba, 0xe7, 0x60, 0xdf, 0x32,
	0x1e, 0x7a, 0x34, 0x8e, 0x04, 0x8f, 0x29, 0x6a, 0xc2, 0xc1, 0xda, 0x76, 0xac, 0xb6, 0xd5, 0x39,
	0xf4, 0x36, 0xbe, 0x3b, 0x82, 0xea, 0x84, 0xcf, 0xc4, 0x92, 0x93, 0x91, 0xe0, 0x4f, 0x2c, 0x44,
	0x35, 0x28, 0x4c, 0xc6, 0x3a, 0xad, 0xe8, 0x15, 0x26, 0x63, 0xe4, 0x82, 0x9d, 0x25, 0x5c, 0x27,
	0x64, 0x9c, 0x82, 0x2e, 0x90, 0x8b, 0xb9, 0xaf, 0x16, 0x1c, 0x79, 0x34, 0x60, 0x11, 0xa3, 0x5c,
	0xfd, 0x50, 0xe7, 0x71, 0xab, 0x91, 0x2e, 0x54, 0xe9, 0x35, 0xb0, 0x31, 0x7a, 0x2e, 0x61, 0xd8,
	0x7a, 0x5b, 0x35, 0xca, 0x4b, 0xc6, 0xd5, 0xa0, 0xff, 0xb1, 0x6a, 0xd4, 0x59, 0x0a, 0x06, 0x1a,
	0xc4, 0x8c, 0x78, 0x5b, 0xc4, 0x8f, 0xa1, 0x94, 0x32, 0xfc, 0xa7, 0x19, 0xa6, 0x8e, 0xfb, 0x69,
	0x41, 0x45, 0x5b, 0xd3, 0x67, 0x49, 0x7d, 0xb2, 0x43, 0x0b, 0x03, 0x9a, 0x4a, 0x16, 0x86, 0x54,
	0xde, 0x51, 0x4e, 0xa8, 0x34, 0x87, 0xdc, 0x83, 0xa0, 0x3e, 0x9c, 0x64, 0xd1, 0xcd, 0xc0, 0x66,
	0xd7, 0xfd, 0x20, 0x72, 0xe0, 0xff, 0x48, 0x52, 0x5f, 0x51, 0xe2, 0x14, 0xdb, 0x56, 0xa7, 0xea,
	0xad, 0xdd, 0x5d, 0x59, 0x4a, 0x7f, 0x2b, 0x8b, 0xfb, 0x6e, 0x41, 0x3d, 0x9d, 0x7d, 0xc3, 0x29,
	0xde, 0x51, 0xe1, 0x21, 0x27, 0x52, 0xf6, 0x34, 0xa7, 0x26, 0x07, 0x03, 0x1e, 0x9e, 0xe5, 0x18,
	0xd4, 0x74, 0x82, 0xd2, 0x50, 0xd2, 0x3f, 0x27, 0xb7, 0x0b, 0xb6, 0x76, 0xaf, 0x08, 0x91, 0x34,
	0x8e, 0x33, 0x95, 0x72, 0xb1, 0xde, 0x25, 0xc0, 0x4d, 0xd2, 0x28, 0x95, 0x0a, 0x43, 0x31, 0x59,
	0x5e, 0x64, 0xe3, 0x6c, 0xa7, 0xef, 0x05, 0x23, 0x4d, 0xc7, 0xe4, 0x62, 0x2e, 0xf7, 0xb0, 0x0d,
	0x2d, 0x4e, 0x95, 0x79, 0x1b, 0xc9, 0x5d, 0x18, 0xe9, 0xb3, 0xb2, 0xbe, 0x8a, 0x8b, 0xaf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x67, 0xef, 0x7d, 0x6f, 0x8b, 0x03, 0x00, 0x00,
}
